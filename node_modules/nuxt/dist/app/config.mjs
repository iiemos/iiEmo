import { reactive } from "vue";
import { useNuxtApp } from "./nuxt.mjs";
import __appConfig from "#build/app.config.mjs";
export const _getAppConfig = () => __appConfig;
export function useAppConfig() {
  const nuxtApp = useNuxtApp();
  if (!nuxtApp._appConfig) {
    nuxtApp._appConfig = reactive(__appConfig);
  }
  return nuxtApp._appConfig;
}
if (process.dev) {
  let applyHMR = function(newConfig) {
    const appConfig = useAppConfig();
    if (newConfig && appConfig) {
      for (const key in newConfig) {
        appConfig[key] = newConfig[key];
      }
      for (const key in appConfig) {
        if (!(key in newConfig)) {
          delete appConfig[key];
        }
      }
    }
  };
  if (import.meta.hot) {
    import.meta.hot.accept((newModule) => {
      const newConfig = newModule._getAppConfig();
      applyHMR(newConfig);
    });
  }
  if (import.meta.webpackHot) {
    import.meta.webpackHot.accept("#build/app.config.mjs", () => {
      applyHMR(__appConfig);
    });
  }
}
